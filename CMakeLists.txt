CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(FoolGo)
SET(CMAKE_CXX_COMPILER c++)
ADD_DEFINITIONS(-std=c++0x)
IF(APPLE)
    ADD_DEFINITIONS(-stdlib=libc++)
ENDIF()
ADD_DEFINITIONS(-O3)
SET(CMAKE_CXX_FLAGS "-Wno-unused-result")
SET(CMAKE_EXE_LINKER_FLAGS "-g")

SET(GTEST_ROOT /usr/share/gtest-1.7.0)
SET(SRC src)
SET(TEST test)

INCLUDE_DIRECTORIES(${SRC})
AUX_SOURCE_DIRECTORY(${SRC} SRCS)
ADD_EXECUTABLE(foolgo ${SRCS})
IF (APPLE)
    SET(FOOLGO_LIB c++)
ENDIF()
TARGET_LINK_LIBRARIES(foolgo ${FOOLGO_LIB})

SET(BOOST_INCLUDE_DIR /usr/local/Cellar/boost/1.56.0/include/)
INCLUDE_DIRECTORIES(${GTEST_ROOT} ${GTEST_ROOT}/include ${BOOST_INCLUDE_DIR})

# Test configs.
ENABLE_TESTING()

SET(GTEST_MAIN ${GTEST_ROOT}/src/gtest_main.cc)
SET(TESTS ${SRCS} ${GTEST_MAIN})
AUX_SOURCE_DIRECTORY(${TEST} TESTS)
LIST(REMOVE_ITEM TESTS ${SRC}/foolishgo.cc)
ADD_EXECUTABLE(tests ${TESTS})
SET(TEST_LIB ${GTEST_ROOT}/libgtest.a ${GTEST_ROOT}/libgtest_main.a pthread)
IF (APPLE)
    SET(TEST_LIB ${TEST_LIB} c++)
ENDIF()
TARGET_LINK_LIBRARIES(tests ${TEST_LIB})

ADD_TEST(NAME BoardTest COMMAND tests)
ADD_TEST(NAME BoardInGmTest COMMAND tests)
